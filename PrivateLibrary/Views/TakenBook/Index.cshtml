@using PrivateLibrary.Data.Models;
@using PrivateLibrary.Models.Pagination
@model PaginatedList<TakenBook>

<link href="~/css/books.css" rel="stylesheet" />

<form asp-controller="TakenBook" asp-action="Index" method="get" style="padding:20px">
    <input class="input-field" type="search" id="searchBox" name="search" value="@ViewBag.Search" placeholder="Заглавие, Автор" />
    <input class="input-btn" type="submit" value="Търси" />
</form>

<table class="table table-hover">
    <thead class="thead-dark">
        <tr>
            <th scope="col">Заглавие</th>
            <th scope="col">Автор</th>
            <th scope="col">Дата на връщане</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var takenBook in Model)
        {
            <tr>
                <td>@takenBook.Title</td>
                <td>@takenBook.Author</td>
                <td>@takenBook.DateOfReturn.ToShortDateString()</td>
                <td>
                    <a href="@Url.Action("Details", "TakenBook", new { id = takenBook.Id })" class="btn btn-primary">Детайли</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = Model.HasPreviousPage ? "" : "disable";
    var nextDisabled = Model.HasNextPage ? "" : "disable";
}
<div class="pagination-ctr">
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" class="@prevDisabled">Предишна</a>
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" class="@nextDisabled">Следваща</a>
</div>

